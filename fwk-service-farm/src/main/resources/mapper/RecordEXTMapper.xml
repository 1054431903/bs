<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fwk.service.farm.dao.RecordEXTMapper">

	<!--======================= 添加农事记录 =========================-->
	<insert id="add" useGeneratedKeys="true"
		keyProperty="id" parameterType="com.fwk.service.farm.entity.RecordEXT">

		INSERT INTO t_f_record (
				content,
				farmtype,
				begintime,
				endtime,
				cost,
				remark,
				sourcedictvalue
			)
			VALUES
				(
					#{content}, 
					#{farmtype}, 
					#{begintime}, 
					#{endtime}, 
					#{cost}, 
					#{remark},
					#{sourcedictvalue}
				)

	</insert>

	<!--=================== 更新农事记录 =========================-->
	<update id="update" parameterType="com.fwk.service.farm.entity.RecordEXT">

		UPDATE t_f_record
					SET 
						edittime = SYSDATE(),
						content = #{content}, 
						farmtype = #{farmtype}, 
						begintime = #{begintime}, 
						endtime = #{endtime}, 
						cost = #{cost}, 
						remark = #{remark},
						sourcedictvalue = #{sourcedictvalue}
					WHERE 
						<choose>
							<!-- 根据主键列表更新 -->
							<when test="(null != idlist) and (idlist.size() > 0)">
								id IN
								<foreach collection="idlist" open="(" separator="," close=")" item="item_id">
									#{item_id}
								</foreach>
							</when>
							<!-- 根据单个主键更新 -->
							<when test="(null != id)">
								id = #{id}
							</when>
							<!-- 不能更新 -->
							<otherwise>
								100 != 100
							</otherwise>
						</choose>
					
	</update>
	
	<!--=============== 删除农事记录 =========================-->
	<update id="deletebyid" parameterType="com.fwk.service.farm.entity.RecordEXT">

		UPDATE t_f_record SET edittime = SYSDATE(), delstate = '${@com.fwk.common.util.constants.CommonConstantsUtil@IS_DELETE_TRUE}' WHERE id = #{id}

	</update>
	
	<!--=============== 根据主键批量删除农事记录 =========================-->
	<update id="batchdeletebyids" parameterType="java.util.List">
	
		<if test="(null != idList) and (idList.size() > 0)">
		UPDATE t_f_record 
					SET 
						edittime = SYSDATE(),
						delstate = '${@com.fwk.common.util.constants.CommonConstantsUtil@IS_DELETE_TRUE}' 
					WHERE 
						id IN
						
						<foreach collection="idList" open="(" separator="," close=")" item="id">
							#{id}
						</foreach>
		</if>

	</update>
	
	<!-- 查询条件：查询出所有符合条件的农事记录 -->
	<sql id="where_queryList">
		
		WHERE 1 = 1
		
		<!-- 业务主键ID -->
		<choose>
			<when test="(null != id)">
				AND id = #{id}
			</when>
			<when test="(null != idlist) and (idlist.size > 0)">
				AND id IN 
				<foreach collection="idlist" item="id" open="(" separator="," close=")">
					#{id}
				</foreach>
			</when>
		</choose>
		
		<!-- 查询该日期以后更新的数据 -->
		<if test="(null != lastservicetime)">
			AND edittime &gt;= #{lastservicetime}
		</if>
		
		<!-- 删除标记 -->
		<if test="(null != delstate)">
			AND delstate = #{delstate}
		</if>
		
		<!-- 创建时间 -->
		<choose>
			<when test=" (null != createdatestart and '' != createdatestart) and (null != createdateend and '' != createdateend)">
				AND (creattime BETWEEN #{createdatestart} AND #{createdateend})
			</when>
			<when test=" (null != createdatestart and '' != createdatestart) and (null == createdateend or '' == createdateend)">
				AND creattime &gt;= #{createdatestart}
			</when>
			<when test=" (null == createdatestart or '' == createdatestart) and null != createdateend and '' != createdateend">
				AND creattime &lt;= #{createdateend}
			</when>
		</choose>
		
		<!-- 根据关键字查询（农事内容、参与人） -->
		<if test="(null != keyword) and ('' != keyword)">
			AND ( (content LIKE CONCAT('%',#{keyword},'%')) 
					<!-- OR (recordpartusernames LIKE CONCAT('%',#{keyword},'%'))  -->
				)
		</if>
		
		<!-- 农事内容 -->
		<if test="(null != content) and ('' != content)">
			AND content = #{content}
		</if>
		
		<!-- 农事类别 -->
		<if test="(null != farmtype)">
			AND farmtype = #{farmtype}
		</if>
		
		<!-- 地块的ID -->
		<if test="(null != parcelid)">
			AND parcelid = #{parcelid}
		</if>
		
		<!-- 地块的名称 -->
		<if test="(null != parcelidname) and ('' != parcelidname)">
			AND parcelidname = #{parcelidname}
		</if>
		
		<!-- 记录来源 -->
		<if test="(null != sourcedictvalue) and ('' != sourcedictvalue)">
			AND sourcedictvalue = #{sourcedictvalue}
		</if>
		<if test="(null != sourcedictvaluename) and ('' != sourcedictvaluename)">
			AND sourcedictvaluename = #{sourcedictvaluename}
		</if>
		
		<!-- 按农事类别查询 -->
		<if test="(null != farmtypelist) and (farmtypelist.size() > 0)">
			AND 
			<foreach collection="farmtypelist" open="(" close=")" item="recordfarmtypeEXT" index="index">
				<if test="(index > 0)">
					OR 
				</if>
				
				 (farmtypenames LIKE CONCAT('%', #{recordfarmtypeEXT.farmtypename},'%'))
			</foreach>
		</if>
		
		
		<!-- 参与人可以查看农事记录 -->
		<if test="(null != recordpartuserids) and ('' != recordpartuserids)">
			AND recordpartuserids LIKE CONCAT('%,', #{recordpartuserids}, ',%')
		</if>
		
		<!-- 按权限查询 -->
		<if test="(null != permisionssqlwhere) and ('' != permisionssqlwhere)">
			${permisionssqlwhere}
		</if>
		
		<!-- 开始时间小于等于指定的时间 -->
		<if test="(null != lessthanbegintime)">
			AND begintime &lt;= #{lessthanbegintime}
		</if>
		
		<!-- 开始时间大于等于指定的时间 -->
		<if test="(null != greatthanbegintime)">
			AND begintime &gt;= #{greatthanbegintime}
		</if>
		
		<!-- 结束时间小于等于指定的时间 -->
		<if test="(null != lessthanendtime)">
			AND endtime &lt;= #{lessthanendtime}
		</if>
		
		<!-- 结束时间大于等于指定的时间 -->
		<if test="(null != greatthanendtime)">
			AND endtime &gt;= #{greatthanendtime}
		</if>
		
		<!-- 开始时间介于指定的开始时间和截止时间 -->
		<if test="(null != betweenstartbegintime) and (null  != betweenendbegintime)">
			AND ( begintime BETWEEN #{betweenstartbegintime} AND #{betweenendbegintime} )
		</if>
		
		<!-- 结束时间介于指定的开始时间和截止时间 -->
		<if test="(null != betweenstartendtime) and (null  != betweenendendtime)">
			AND ( endtime BETWEEN #{betweenstartendtime} AND #{betweenendendtime} )
		</if>
		
		<!-- 是否已读的标志 -->
		<if test="(null != hasreaded)">
			AND hasreaded = #{hasreaded}
		</if>
		
	</sql>
	
	<!--=================== 检索农事记录 ========================-->
	<select id="queryList" parameterType="com.fwk.service.farm.entity.RecordEXT" resultType="com.fwk.service.farm.entity.RecordEXT">
		SELECT
			*,GROUP_CONCAT(parcelid) as parcelids,GROUP_CONCAT(parcelidname) as parcelnames
		FROM
			(
				SELECT
					t_f_record_all.*, 
					t_f_record_partuser_usernames.recordpartusernames,
					CONCAT(',', t_f_record_partuser_usernames.recordpartuserids, ',') AS recordpartuserids,
					t_f_record_farmtype_farmtypenames.farmtypenames,
					t_f_record_output_recordoutputnames.recordoutputnames,
					t_f_record_userpermisions_final.createuserid AS userpermisionscreateuserid,
					t_f_record_userpermisions_final.createuserorgid AS userpermisionscreateuserorgid,
					t_f_record_userpermisions_final.createuserdepartmentid AS userpermisionscreateuserdepartmentidlist
				FROM
					(
						SELECT
							t_f_record_source_and_task.*,
							<choose>
								<when test="(null != recordpartuserids) and ('' != recordpartuserids)">
									(
										SELECT
											t_f_record_partuser.hasreaded
										FROM
											t_f_record_partuser
										WHERE
											t_f_record_partuser.userid = #{recordpartuserids}
										AND t_f_record_partuser.delstate = '${@com.fwk.common.util.constants.CommonConstantsUtil@IS_DELETE_FALSE}'
										AND t_f_record_partuser.recordid = t_f_record_source_and_task.id
									) AS hasreaded,
								</when>
								<otherwise>
									${@com.fwk.common.util.constants.CommonConstantsUtil@YES_OR_NO_YES} AS hasreaded,
								</otherwise>
							</choose>
							date_format(t_f_record_source_and_task.begintime,'%Y-%c-%d %h:%i:%s') AS begintimestr,
							date_format(t_f_record_source_and_task.endtime,'%Y-%c-%d %h:%i:%s') AS endtimestr,
							t_f_record_parcel.parcelid,
							t_p_parcel.`name` AS parcelidname,
							t_c_dict.dictname AS sourcedictvaluename
						FROM
							(
								<choose>
									<!-- 农事任务上的记录可以随便查 -->
									<when test="(null != id)">
										SELECT * FROM t_f_record
									</when>
									<otherwise>
										(
											SELECT
												*
											FROM
												t_f_record
											WHERE
												t_f_record.sourcedictvalue = '${@com.fwk.common.util.constants.EDict@farm_source_record.getDict().dictValue}'
										)
										UNION
											(
												SELECT
													t_f_record.*
												FROM
													t_f_record,
													t_f_task_partics
												WHERE
													t_f_record.sourcedictvalue = '${@com.fwk.common.util.constants.EDict@farm_source_task.getDict().dictValue}'
												<!-- AND t_f_record.id IN ( t_f_task_partics.recordeid ) -->
												and FIND_IN_SET(t_f_record.id,t_f_task_partics.recordeid)
												AND t_f_task_partics.issavedtorecord = '${@com.fwk.common.util.constants.CommonConstantsUtil@YES_OR_NO_YES}'
												AND t_f_task_partics.delstate = '${@com.fwk.common.util.constants.CommonConstantsUtil@IS_DELETE_FALSE}'
											)
									</otherwise>
								</choose>
							) t_f_record_source_and_task
						LEFT OUTER JOIN t_f_record_parcel ON t_f_record_source_and_task.id = t_f_record_parcel.recordid
						LEFT OUTER JOIN t_p_parcel ON t_f_record_parcel.parcelid = t_p_parcel.id
						LEFT OUTER JOIN t_c_dict ON (
							t_c_dict.dicttype = '${@com.fwk.common.util.constants.EDictType@farm_source.dicttype}'
							AND t_c_dict.dictvalue = t_f_record_source_and_task.sourcedictvalue
						)
					) t_f_record_all
				LEFT OUTER JOIN (
					SELECT
						recordid,
						GROUP_CONCAT(username) AS recordpartusernames,
						GROUP_CONCAT(userid) AS recordpartuserids
					FROM
						(
							SELECT
								t_f_record_partuser.*, t_u_users.`name` AS username
							FROM
								t_f_record_partuser
							LEFT OUTER JOIN t_u_users ON t_f_record_partuser.userid = t_u_users.id
						) table_all
					WHERE
						delstate = '${@com.fwk.common.util.constants.CommonConstantsUtil@IS_DELETE_FALSE}'
					GROUP BY
						recordid
				) t_f_record_partuser_usernames ON t_f_record_all.id = t_f_record_partuser_usernames.recordid
				LEFT OUTER JOIN (
					SELECT
						recordid,
						GROUP_CONCAT(farmtypename) AS farmtypenames
					FROM
						(
							SELECT
								t_f_record_farmtype.*, t_s_dict.`name` AS farmtypename
							FROM
								t_f_record_farmtype
							LEFT OUTER JOIN t_s_dict ON t_f_record_farmtype.farmtype = t_s_dict.id
						) t_f_record_farmtype_farmtypename
					WHERE
						delstate = '${@com.fwk.common.util.constants.CommonConstantsUtil@IS_DELETE_FALSE}'
					GROUP BY
						recordid
				) t_f_record_farmtype_farmtypenames ON t_f_record_all.id = t_f_record_farmtype_farmtypenames.recordid
				LEFT OUTER JOIN (
					SELECT
						t_f_record_output.recordid,
						GROUP_CONCAT(t_f_output.`name`) AS recordoutputnames
					FROM
						t_f_record_output
					LEFT OUTER JOIN t_f_output ON t_f_record_output.outputid = t_f_output.id
					WHERE
						t_f_record_output.delstate = '${@com.fwk.common.util.constants.CommonConstantsUtil@IS_DELETE_FALSE}'
					AND t_f_output.delstate = '${@com.fwk.common.util.constants.CommonConstantsUtil@IS_DELETE_FALSE}'
					GROUP BY
						t_f_record_output.recordid
				) t_f_record_output_recordoutputnames ON t_f_record_all.id = t_f_record_output_recordoutputnames.recordid
				LEFT OUTER JOIN (
					SELECT
						t_f_record_userpermisions.recordid,
						t_f_record_userpermisions.createuserid,
						t_f_record_userpermisions.createuserorgid,
						CONCAT(',', GROUP_CONCAT(
							t_f_record_userpermisions.createuserdepartmentid
						), ',') AS createuserdepartmentid
					FROM
						t_f_record_userpermisions
					WHERE
						t_f_record_userpermisions.delstate = '${@com.fwk.common.util.constants.CommonConstantsUtil@IS_DELETE_FALSE}'
					GROUP BY
						t_f_record_userpermisions.recordid
				) t_f_record_userpermisions_final ON t_f_record_userpermisions_final.recordid = t_f_record_all.id 
			) table_all
			
			<!-- 查询条件 -->
			<include refid="where_queryList"/>
			GROUP BY id
			<!-- 排序 -->
			<choose>
				<!-- 使用自定义的排序方式排序 -->
				<when test="(null != orderBySQL) and ('' != orderBySQL)">
					ORDER BY ${orderBySQL}
					<if test="ordertype != null">
						${ordertype} 
					</if>
				</when>
				<!-- 使用默认的排序方式：添加时间降序排序（id是自增长，所以与添加时间的先后顺序一致） -->
				<otherwise>
					ORDER BY begintime DESC
				</otherwise>
			</choose>
			
			<!-- 分页查询 -->
			<if test="(null != page)">
				LIMIT #{page.startRow}, #{page.pageSize}
			</if>
	</select>
	
	<!--=================== 检索农事记录的总记录数量 ========================-->
	<select id="queryListTotalCount" parameterType="com.fwk.service.farm.entity.RecordEXT" resultType="java.lang.Integer">
		SELECT
			COUNT(1) AS totalCount
		FROM
			(
				SELECT
					t_f_record_all.*, 
					t_f_record_partuser_usernames.recordpartusernames,
					CONCAT(',', t_f_record_partuser_usernames.recordpartuserids, ',') AS recordpartuserids,
					t_f_record_farmtype_farmtypenames.farmtypenames,
					t_f_record_output_recordoutputnames.recordoutputnames,
					t_f_record_userpermisions_final.createuserid AS userpermisionscreateuserid,
					t_f_record_userpermisions_final.createuserorgid AS userpermisionscreateuserorgid,
					t_f_record_userpermisions_final.createuserdepartmentid AS userpermisionscreateuserdepartmentidlist
				FROM
					(
						SELECT
							t_f_record_source_and_task.*,
							<choose>
								<when test="(null != recordpartuserids) and ('' != recordpartuserids)">
									(
										SELECT
											t_f_record_partuser.hasreaded
										FROM
											t_f_record_partuser
										WHERE
											t_f_record_partuser.userid = #{recordpartuserids}
										AND t_f_record_partuser.delstate = '${@com.fwk.common.util.constants.CommonConstantsUtil@IS_DELETE_FALSE}'
										AND t_f_record_partuser.recordid = t_f_record_source_and_task.id
									) AS hasreaded,
								</when>
								<otherwise>
									${@com.fwk.common.util.constants.CommonConstantsUtil@YES_OR_NO_YES} AS hasreaded,
								</otherwise>
							</choose>
							date_format(t_f_record_source_and_task.begintime,'%Y-%c-%d %h:%i:%s') AS begintimestr,
							date_format(t_f_record_source_and_task.endtime,'%Y-%c-%d %h:%i:%s') AS endtimestr,
							t_f_record_parcel.parcelid,
							t_p_parcel.`name` AS parcelidname,
							t_c_dict.dictname AS sourcedictvaluename
						FROM
							(
								<choose>
									<!-- 农事任务上的记录可以随便查 -->
									<when test="(null != id)">
										SELECT * FROM t_f_record
									</when>
									<otherwise>
										(
											SELECT
												*
											FROM
												t_f_record
											WHERE
												t_f_record.sourcedictvalue = '${@com.fwk.common.util.constants.EDict@farm_source_record.getDict().dictValue}'
										)
										UNION
											(
												SELECT
													t_f_record.*
												FROM
													t_f_record,
													t_f_task_partics
												WHERE
													t_f_record.sourcedictvalue = '${@com.fwk.common.util.constants.EDict@farm_source_task.getDict().dictValue}'
												AND t_f_record.id IN ( t_f_task_partics.recordeid )
												AND t_f_task_partics.issavedtorecord = '${@com.fwk.common.util.constants.CommonConstantsUtil@YES_OR_NO_YES}'
												AND t_f_task_partics.delstate = '${@com.fwk.common.util.constants.CommonConstantsUtil@IS_DELETE_FALSE}'
											)
									</otherwise>
								</choose>
							) t_f_record_source_and_task
						LEFT OUTER JOIN t_f_record_parcel ON t_f_record_source_and_task.id = t_f_record_parcel.recordid
						LEFT OUTER JOIN t_p_parcel ON t_f_record_parcel.parcelid = t_p_parcel.id
						LEFT OUTER JOIN t_c_dict ON (
							t_c_dict.dicttype = '${@com.fwk.common.util.constants.EDictType@farm_source.dicttype}'
							AND t_c_dict.dictvalue = t_f_record_source_and_task.sourcedictvalue
						)
					) t_f_record_all
				LEFT OUTER JOIN (
					SELECT
						recordid,
						GROUP_CONCAT(username) AS recordpartusernames,
						GROUP_CONCAT(userid) AS recordpartuserids
					FROM
						(
							SELECT
								t_f_record_partuser.*, t_u_users.`name` AS username
							FROM
								t_f_record_partuser
							LEFT OUTER JOIN t_u_users ON t_f_record_partuser.userid = t_u_users.id
						) table_all
					WHERE
						delstate = '${@com.fwk.common.util.constants.CommonConstantsUtil@IS_DELETE_FALSE}'
					GROUP BY
						recordid
				) t_f_record_partuser_usernames ON t_f_record_all.id = t_f_record_partuser_usernames.recordid
				LEFT OUTER JOIN (
					SELECT
						recordid,
						GROUP_CONCAT(farmtypename) AS farmtypenames
					FROM
						(
							SELECT
								t_f_record_farmtype.*, t_s_dict.`name` AS farmtypename
							FROM
								t_f_record_farmtype
							LEFT OUTER JOIN t_s_dict ON t_f_record_farmtype.farmtype = t_s_dict.id
						) t_f_record_farmtype_farmtypename
					WHERE
						delstate = '${@com.fwk.common.util.constants.CommonConstantsUtil@IS_DELETE_FALSE}'
					GROUP BY
						recordid
				) t_f_record_farmtype_farmtypenames ON t_f_record_all.id = t_f_record_farmtype_farmtypenames.recordid
				LEFT OUTER JOIN (
					SELECT
						t_f_record_output.recordid,
						GROUP_CONCAT(t_f_output.`name`) AS recordoutputnames
					FROM
						t_f_record_output
					LEFT OUTER JOIN t_f_output ON t_f_record_output.outputid = t_f_output.id
					WHERE
						t_f_record_output.delstate = '${@com.fwk.common.util.constants.CommonConstantsUtil@IS_DELETE_FALSE}'
					AND t_f_output.delstate = '${@com.fwk.common.util.constants.CommonConstantsUtil@IS_DELETE_FALSE}'
					GROUP BY
						t_f_record_output.recordid
				) t_f_record_output_recordoutputnames ON t_f_record_all.id = t_f_record_output_recordoutputnames.recordid
				LEFT OUTER JOIN (
					SELECT
						t_f_record_userpermisions.recordid,
						t_f_record_userpermisions.createuserid,
						t_f_record_userpermisions.createuserorgid,
						CONCAT(',', GROUP_CONCAT(
							t_f_record_userpermisions.createuserdepartmentid
						), ',') AS createuserdepartmentid
					FROM
						t_f_record_userpermisions
					WHERE
						t_f_record_userpermisions.delstate = '${@com.fwk.common.util.constants.CommonConstantsUtil@IS_DELETE_FALSE}'
					GROUP BY
						t_f_record_userpermisions.recordid
				) t_f_record_userpermisions_final ON t_f_record_userpermisions_final.recordid = t_f_record_all.id 
			) table_all
			
			<!-- 查询条件 -->
			<include refid="where_queryList"/>
	</select>
	
	<!-- 根据时间段获取该时间段是否存在任务或计划(2018-06-15 修改以下查询，只需要查询有任务的日期，以下接口暂时弃用) -->
	<select id="queryExistPlanTaskEachDateBak" parameterType="map" resultType="java.lang.String">
		select p_t_date.* from
		(
			(
				select DATE_FORMAT(t.endtime,'%Y-%m-%d') from t_f_task t
				LEFT JOIN t_f_task_partics tp on tp.taskid = t.id
				LEFT JOIN t_f_task_userpermisions tu on tu.taskid = t.id
				where 1=1 
				<!-- and t.taskstatus != 'task-status-overdue' -->
				and tp.userid = #{operateid}
				<!-- and tu.createuserdepartmentid in ( -->
				and tu.createuserorgid in (
				<foreach collection="orgids" item="org" separator=",">
					#{org}
				</foreach>
				)
				and t.delstate = 1
				and DATE_FORMAT(t.endtime,'%Y-%m-%d') BETWEEN DATE_FORMAT(#{begindate},'%Y-%m-%d') and DATE_FORMAT(#{enddate},'%Y-%m-%d')
				GROUP BY DATE_FORMAT(t.endtime,'%Y-%m-%d')
				ORDER BY DATE_FORMAT(t.endtime,'%Y-%m-%d')
			)
			UNION ALL
			(
				select DATE_FORMAT(p.endtime,'%Y-%m-%d') from t_f_plan p
				LEFT JOIN t_f_plan_partics pp on pp.planid = p.id
				LEFT JOIN t_f_plan_userpermisions pu on pu.planid = p.id
				where 1=1 
				and pp.userid = #{operateid}
				<!-- and pu.createuserdepartmentid in ( -->
				and pu.createuserorgid in (
				<foreach collection="orgids" item="org" separator=",">
					#{org}
				</foreach>
				)
				and DATE_FORMAT(p.endtime,'%Y-%m-%d') BETWEEN DATE_FORMAT(#{begindate},'%Y-%m-%d') and DATE_FORMAT(#{enddate},'%Y-%m-%d')
				GROUP BY DATE_FORMAT(p.endtime,'%Y-%m-%d')
				ORDER BY DATE_FORMAT(p.endtime,'%Y-%m-%d')
			)
		) p_t_date
	</select>
	
	<!-- 根据时间段获取该时间段是否存在任务 -->
	<select id="queryExistPlanTaskEachDate_bak" parameterType="map" resultType="java.lang.String">
		select p_t_date.* from
		(
			select DATE_FORMAT(t.endtime,'%Y-%m-%d') from t_f_task t
			LEFT JOIN t_f_task_partics tp on tp.taskid = t.id
			LEFT JOIN t_f_task_userpermisions tu on tu.taskid = t.id
			where 1=1 
			and tp.userid = #{operateid}
			and tu.createuserorgid in 
			<foreach collection="orgids" item="org" separator="," open="(" close=")">
				#{org}
			</foreach>
			and t.delstate = 1
			and DATE_FORMAT(t.endtime,'%Y-%m-%d') BETWEEN DATE_FORMAT(#{begindate},'%Y-%m-%d') and DATE_FORMAT(#{enddate},'%Y-%m-%d')
			GROUP BY DATE_FORMAT(t.endtime,'%Y-%m-%d')
			ORDER BY DATE_FORMAT(t.endtime,'%Y-%m-%d')
		) p_t_date
	</select>
	
	<!-- 根据时间段获取该时间段是否存在任务,并查询出该任务开始到结束的时间列表 -->
	<select id="queryExistPlanTaskEachDate" parameterType="map" resultType="java.util.Map">
		SELECT
			DATE_FORMAT( t.begintime, '%Y-%m-%d') as begindate,
			DATE_FORMAT( t.endtime, '%Y-%m-%d') as enddate
		FROM
			t_f_task t
			LEFT JOIN t_f_task_partics tp ON tp.taskid = t.id
			LEFT JOIN t_f_task_userpermisions tu ON tu.taskid = t.id 
		WHERE
			1 = 1 
			AND tp.userid = #{operateid}
			AND tu.createuserorgid IN
			<foreach collection="orgids" item="org" separator="," open="(" close=")">
				#{org}
			</foreach>
			AND t.delstate = 1 
			AND DATE_FORMAT(t.endtime, '%Y-%m-%d' ) BETWEEN DATE_FORMAT(#{begindate}, '%Y-%m-%d' ) 
			AND DATE_FORMAT(#{enddate}, '%Y-%m-%d' )
			GROUP BY DATE_FORMAT( t.begintime, '%Y-%m-%d' ), DATE_FORMAT( t.endtime, '%Y-%m-%d' ) 
	</select>
	
	
	<!-- 根据系统当前日期，获取已逾期的任务数量 -->
	<select id="queryOutPlanCntByToday" parameterType="map" resultType="int">
		<!-- SELECT
			count(*)
		FROM
			t_f_task t
		LEFT JOIN t_f_task_partics tp ON tp.taskid = t.id
		LEFT JOIN t_f_task_userpermisions tu ON tu.taskid = t.id
		WHERE
			1 = 1
		AND t.taskstatus != 'task-status-finish'不等于已完成的
		AND tp.taskstatus = 'task-status-overdue'  逾期的
		AND tp.userid = #{operateid}
		and tu.createuserdepartmentid in (
		and tu.createuserorgid in (
			<foreach collection="orgids" item="orgid" separator=",">
				#{orgid}
			</foreach>
		)
		and DATE_FORMAT(t.endtime,'%Y-%m-%d %H:%i')  &lt; DATE_FORMAT(SYSDATE(),'%Y-%m-%d %H:%i')
		and t.delstate = 1 -->
		
		SELECT
			count(*)
		FROM
			t_f_task_userpermisions a
		LEFT JOIN t_f_task b ON b.id = a.taskid
		LEFT JOIN t_f_task_partics c ON c.taskid = b.id
		WHERE
			a.createuserorgid = a.createuserdepartmentid
		AND a.createuserorgid IN
		<foreach collection="orgids" item="orgid" separator="," open="(" close=")">
			#{orgid}
		</foreach>
		AND b.delstate = 1
		AND DATE_FORMAT(b.endtime, '%Y-%m-%d %H:%i') &lt; DATE_FORMAT(SYSDATE(), '%Y-%m-%d %H:%i')
		AND c.taskstatus = 'task-status-overdue'
		AND c.userid = #{operateid}
		
	</select>
	
	<!-- 查询当前用户是否拥有操作该任务的权限 -->
	<select id="checkIsOwenOperateAuthor" parameterType="map" resultType="int">
		select count(*) from t_f_record_userpermisions ru
		where 1=1
		and ru.recordid = #{id}
		and ru.createuserid in (
			<foreach collection="userids" item="userid" separator=",">
				#{userid}
			</foreach>
		)
		and ru.delstate = 1
	</select>
</mapper>