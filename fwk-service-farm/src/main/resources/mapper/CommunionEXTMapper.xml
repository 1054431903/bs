<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fwk.service.farm.dao.CommunionEXTMapper">

	<!--======================= 添加农事交流 =========================-->
	<insert id="add" useGeneratedKeys="true"
		keyProperty="id" parameterType="com.fwk.service.farm.entity.CommunionEXT">

		INSERT INTO 
			t_f_communion (
					communioncontent,
					createuserid,
					location
				)
				VALUES
					(
						#{communioncontent},
						#{createuserid},
						#{location}
					)

	</insert>
	
	<!--======================= 批量添加农事交流 =========================-->
	<insert id="batchAdd" useGeneratedKeys="true"
		keyProperty="id" parameterType="java.util.List">

		<if test="(null != list) and (list.size() > 0)">
			INSERT INTO 
				t_f_communion (
						communioncontent,
						createuserid,
						location
					)
					VALUES
				<foreach collection="list" item="communionEXT" separator=",">
					(
							#{communionEXT.communioncontent},
							#{communionEXT.createuserid},
							#{communionEXT.location}
						)
				</foreach>
		</if>

	</insert>
	
	<!--=================== 更新农事交流 =========================-->
	<update id="update" parameterType="com.fwk.service.farm.entity.CommunionEXT">

		UPDATE t_f_communion
					SET 
						edittime = SYSDATE(),
						communioncontent = #{communioncontent},
						createuserid = #{createuserid},
						location = #{location}
					WHERE 
						id = #{id}
					
	</update>
	
	<!--=============== 删除农事交流 =========================-->
	<update id="deletebyid" parameterType="com.fwk.service.farm.entity.CommunionEXT">

		UPDATE t_f_communion SET edittime = SYSDATE(), delstate = '${@com.fwk.common.util.constants.CommonConstantsUtil@IS_DELETE_TRUE}' WHERE id = #{id}

	</update>
	
	<!--=============== 根据主键批量删除农事交流 =========================-->
	<update id="batchdeletebyids" parameterType="java.util.List">
	
		<if test="(null != idList) and (idList.size() > 0)">
		UPDATE t_f_communion 
					SET 
						edittime = SYSDATE(),
						delstate = '${@com.fwk.common.util.constants.CommonConstantsUtil@IS_DELETE_TRUE}' 
					WHERE 
						id IN
						
						<foreach collection="idList" open="(" separator="," close=")" item="id">
							#{id}
						</foreach>
		</if>

	</update>
	
	<!-- 查询条件：查询出所有符合条件的农事交流 -->
	<sql id="where_queryList">
		
		WHERE 1 = 1
		
		<!-- 业务主键ID -->
		<choose>
			<when test="(null != id)">
				AND id = #{id}
			</when>
			<when test="(null != idlist) and (idlist.size > 0)">
				AND id IN 
				<foreach collection="idlist" item="id" open="(" separator="," close=")">
					#{id}
				</foreach>
			</when>
		</choose>
		
		<!-- 查询该日期以后更新的数据 -->
		<if test="(null != lastservicetime)">
			AND edittime &gt;= #{lastservicetime}
		</if>
		
		<!-- 删除标记 -->
		<choose>
			<when test="(null == delstate)">
				AND delstate = '${@com.fwk.common.util.constants.CommonConstantsUtil@IS_DELETE_FALSE}'
			</when>
			<otherwise>
				AND delstate = #{delstate}
			</otherwise>
		</choose>
		
		<!-- 创建时间 -->
		<choose>
			<when test=" (null != createdatestart and '' != createdatestart) and (null != createdateend and '' != createdateend)">
				AND (creattime BETWEEN #{createdatestart} AND #{createdateend})
			</when>
			<when test=" (null != createdatestart and '' != createdatestart) and (null == createdateend or '' == createdateend)">
				AND creattime &gt;= #{createdatestart}
			</when>
			<when test=" (null == createdatestart or '' == createdatestart) and null != createdateend and '' != createdateend">
				AND creattime &lt;= #{createdateend}
			</when>
		</choose>
		
		<!-- 根据关键字查询（发布人、品类、地块、地点、问题内容） -->
		<if test="(null != keyword) and ('' != keyword)">
			AND ( (`createuseridname` LIKE CONCAT('%',#{keyword},'%')) 
					OR (categorynames LIKE CONCAT('%',#{keyword},'%'))
					OR (parcelidnames LIKE CONCAT('%',#{keyword},'%'))
					OR (location LIKE CONCAT('%',#{keyword},'%'))
					OR (communioncontent LIKE CONCAT('%',#{keyword},'%'))
				)
		</if>
		
	</sql>
	
	<!--=================== 检索农事交流 ========================-->
	<select id="queryList" parameterType="com.fwk.service.farm.entity.CommunionEXT" resultType="com.fwk.service.farm.entity.CommunionEXT">
		SELECT
			*
		FROM
			(
				SELECT
					t_f_communion_user.*, t_f_communion_category_categorynames.categorynames,
					t_f_communion_parcel_parcelidnames.parcelidnames,
					t_f_communion_userpermisions_ordernoorgid.ordernoorgid,
					t_f_communion_userpermisions_ordernoorgid.userloginorgid
				FROM
					(
						SELECT
							t_f_communion.*, 
							t_u_users.`name` AS createuseridname,
							t_u_users.nickname AS createuseridnickname,
							t_u_users.supportid AS usersupportid,
							t_c_resource.resourcepath AS photourl,
							t_u_org.`name` AS orgname
						FROM
							t_f_communion
						LEFT OUTER JOIN t_u_users ON t_f_communion.createuserid = t_u_users.id
						LEFT OUTER JOIN t_c_resource_history ON t_c_resource_history.id = t_u_users.photo
						LEFT OUTER JOIN t_c_resource ON t_c_resource.id = t_c_resource_history.currentResource
						LEFT OUTER JOIN t_u_org ON t_u_users.loginorgid = t_u_org.id AND t_u_org.delstate = '${@com.fwk.common.util.constants.CommonConstantsUtil@IS_DELETE_FALSE}'
					) t_f_communion_user
				LEFT OUTER JOIN (
					SELECT
						communionid,
						GROUP_CONCAT(categorynames) AS categorynames
					FROM
						(
							SELECT
								t_f_communion_category.*, t_c_category.`name` AS categorynames
							FROM
								t_f_communion_category,
								t_c_category
							WHERE
								t_f_communion_category.categoryid = t_c_category.id
							AND t_f_communion_category.delstate = '${@com.fwk.common.util.constants.CommonConstantsUtil@IS_DELETE_FALSE}'
							AND t_c_category.delstate = '${@com.fwk.common.util.constants.CommonConstantsUtil@IS_DELETE_FALSE}'
						) table_all
					GROUP BY
						table_all.communionid
				) t_f_communion_category_categorynames ON t_f_communion_user.id = t_f_communion_category_categorynames.communionid
				LEFT OUTER JOIN (
					SELECT
						communionid,
						GROUP_CONCAT(parcelidnames) AS parcelidnames
					FROM
						(
							SELECT
								t_f_communion_parcel.*, t_p_parcel.`name` AS parcelidnames
							FROM
								t_f_communion_parcel,
								t_p_parcel
							WHERE
								t_f_communion_parcel.parcelid = t_p_parcel.id
							AND t_f_communion_parcel.delstate = '${@com.fwk.common.util.constants.CommonConstantsUtil@IS_DELETE_FALSE}'
							AND t_p_parcel.delstate = '${@com.fwk.common.util.constants.CommonConstantsUtil@IS_DELETE_FALSE}'
						) table_all
					GROUP BY
						table_all.communionid
				) t_f_communion_parcel_parcelidnames ON t_f_communion_user.id = t_f_communion_parcel_parcelidnames.communionid
				LEFT OUTER JOIN (
					SELECT
						t_f_communion_userpermisions.communionid,
						t_f_communion_userpermisions.createuserorgid AS userloginorgid,
						FIND_IN_SET(
							#{userloginorgid},
							t_f_communion_userpermisions.createuserorgid
						) AS ordernoorgid
					FROM
						t_f_communion_userpermisions
					GROUP BY
						t_f_communion_userpermisions.communionid
				) t_f_communion_userpermisions_ordernoorgid ON t_f_communion_user.id = t_f_communion_userpermisions_ordernoorgid.communionid
			) table_all
			
			<!-- 查询条件 -->
			<include refid="where_queryList"/>
			
			<!-- 排序 -->
			<choose>
				<!-- 使用自定义的排序方式排序 -->
				<when test="(null != orderBySQL) and ('' != orderBySQL)">
					ORDER BY ${orderBySQL}
				</when>
				<!-- 默认按发布时间降序排序（id 自增长，与时间的先后顺序一致） -->
				<otherwise>
					ORDER BY ordernoorgid DESC, id DESC
				</otherwise>
			</choose>
			
			<!-- 分页查询 -->
			<if test="(null != page)">
				LIMIT #{page.startRow}, #{page.pageSize}
			</if>
	</select>
	
	<!--=================== 检索农事交流的总记录数量 ========================-->
	<select id="queryListTotalCount" parameterType="com.fwk.service.farm.entity.CommunionEXT" resultType="java.lang.Integer">
		SELECT
			COUNT(1) AS totalCount
		FROM
			(
				SELECT
					t_f_communion_user.*, t_f_communion_category_categorynames.categorynames,
					t_f_communion_parcel_parcelidnames.parcelidnames
				FROM
					(
						SELECT
							t_f_communion.*, 
							t_u_users.`name` AS createuseridname,
							t_u_users.nickname AS createuseridnickname,
							t_u_users.supportid AS usersupportid,
							t_c_resource.resourcepath AS photourl,
							t_u_org.`name` AS orgname
						FROM
							t_f_communion
						LEFT OUTER JOIN t_u_users ON t_f_communion.createuserid = t_u_users.id
						LEFT OUTER JOIN t_c_resource_history ON t_c_resource_history.id = t_u_users.photo
						LEFT OUTER JOIN t_c_resource ON t_c_resource.id = t_c_resource_history.currentResource
						LEFT OUTER JOIN t_u_org ON t_u_users.loginorgid = t_u_org.id AND t_u_org.delstate = '${@com.fwk.common.util.constants.CommonConstantsUtil@IS_DELETE_FALSE}'
					) t_f_communion_user
				LEFT OUTER JOIN (
					SELECT
						communionid,
						GROUP_CONCAT(categorynames) AS categorynames
					FROM
						(
							SELECT
								t_f_communion_category.*, t_c_category.`name` AS categorynames
							FROM
								t_f_communion_category,
								t_c_category
							WHERE
								t_f_communion_category.categoryid = t_c_category.id
							AND t_f_communion_category.delstate = '${@com.fwk.common.util.constants.CommonConstantsUtil@IS_DELETE_FALSE}'
							AND t_c_category.delstate = '${@com.fwk.common.util.constants.CommonConstantsUtil@IS_DELETE_FALSE}'
						) table_all
					GROUP BY
						table_all.communionid
				) t_f_communion_category_categorynames ON t_f_communion_user.id = t_f_communion_category_categorynames.communionid
				LEFT OUTER JOIN (
					SELECT
						communionid,
						GROUP_CONCAT(parcelidnames) AS parcelidnames
					FROM
						(
							SELECT
								t_f_communion_parcel.*, t_p_parcel.`name` AS parcelidnames
							FROM
								t_f_communion_parcel,
								t_p_parcel
							WHERE
								t_f_communion_parcel.parcelid = t_p_parcel.id
							AND t_f_communion_parcel.delstate = '${@com.fwk.common.util.constants.CommonConstantsUtil@IS_DELETE_FALSE}'
							AND t_p_parcel.delstate = '${@com.fwk.common.util.constants.CommonConstantsUtil@IS_DELETE_FALSE}'
						) table_all
					GROUP BY
						table_all.communionid
				) t_f_communion_parcel_parcelidnames ON t_f_communion_user.id = t_f_communion_parcel_parcelidnames.communionid
			) table_all
			
			<!-- 查询条件 -->
			<include refid="where_queryList"/>
	</select>
	
	<!-- 增加或者减少农事交流的评论数量（正数为增加、负数为减少） -->
	<update id="increaseOrDecreaseCommentcount" parameterType="com.fwk.service.farm.entity.CommunionEXT">
		
		UPDATE t_f_communion SET t_f_communion.commentcount = ( IFNULL(t_f_communion.commentcount,0) + ${increaseordecreaseoperand} ) WHERE id = #{id}
		
	</update>
	
</mapper>